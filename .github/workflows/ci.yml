name: Continuous Integration
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - uses: actions-rs/clippy-check@v1
        id: clippy-check
        name: Check project against Clippy
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings

      - id: prepare-tests
        name: Prepare test environment (Kafka)
        run: docker-compose -f "docker-compose.yml" up -d --build

      - id: install-tarpaulin
        name: Install Cargo tarpaulin
        run: cargo install cargo-tarpaulin

# FIXME: cargo tarpaulin doesn't seem to work: using --all-targets says this option has been specified more than once, not using it results in 0 tests being run
#      - id: test-coverage
#        name: Run tests with coverage
#        run: cargo tarpaulin --verbose --all-targets --all-features --no-fail-fast --out Xml
#
#      - name: Upload to codecov.io
#        uses: codecov/codecov-action@v2
#        with:
#          #token: ${{secrets.CODECOV_TOKEN}} # not required for public repos
#          fail_ci_if_error: true

      - id: test
        name: Test all targets
        run: cargo test --all-features --all-targets

      - id: teardown
        name: Tear down test environment
        if: always()
        run: docker-compose -f "docker-compose.yml" down

      - id: version
        name: Get Package version
        run: >
          echo "::set-output name=version::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"

      - id: docker-build
        name: Build release using Docker
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/buska-cli:${{steps.version.outputs.version}} .

      - id: docker-push
        name: Push docker image to Docker hub
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/buska-cli:${{steps.version.outputs.version}}